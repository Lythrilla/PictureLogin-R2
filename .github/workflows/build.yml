name: 构建PictureLogin插件

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  # 允许手动触发工作流
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      
    - name: 设置JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin' # Eclipse Temurin JDK
        cache: gradle
        
    - name: 授予Gradle执行权限
      run: chmod +x gradlew
      
    - name: 使用Gradle构建
      run: ./gradlew build
      
    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: PictureLogin
        path: build/libs/PictureLogin-*.jar
        
    - name: 构建状态通知
      if: always()
      uses: ravsamhq/notify-slack-action@v2
      with:
        status: ${{ job.status }}
        notification_title: '{workflow} 工作流 {status_message}'
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
        footer: '<{workflow_url}|查看工作流>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      # 如果不需要Slack通知，可以删除此步骤

  # 添加版本发布工作流
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      
    - name: 设置JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 授予Gradle执行权限
      run: chmod +x gradlew
      
    - name: 使用Gradle构建
      run: ./gradlew shadowJar
      
    - name: 创建GitHub发布
      uses: softprops/action-gh-release@v1
      with:
        files: build/libs/PictureLogin-*.jar
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 